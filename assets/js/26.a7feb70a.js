(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{623:function(t,s,a){"use strict";a.r(s);var n=a(3),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"编程语言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编程语言"}},[t._v("#")]),t._v(" 编程语言")]),t._v(" "),a("h3",{attrs:{id:"编程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编程"}},[t._v("#")]),t._v(" 编程")]),t._v(" "),a("ul",[a("li",[t._v("编程：\n"),a("ul",[a("li",[t._v("就是让计算机为解决某个问题而使用某种程序设计语言编写程序代码，并最终得到结果的过程。")])])]),t._v(" "),a("li",[t._v("计算机程序：\n"),a("ul",[a("li",[t._v("就是计算机所执行的一系列的指令集合，而程序全部都是用我们所掌握的语言来编写的，所以人们要控制计算机一定要通过计算机语言向计算机发出命令。")])])])]),t._v(" "),a("h3",{attrs:{id:"计算机语言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计算机语言"}},[t._v("#")]),t._v(" 计算机语言")]),t._v(" "),a("ul",[a("li",[t._v("计算机语言指用于人与计算机之间通讯的语言，它是人与计算机之间传递信息的媒介。")]),t._v(" "),a("li",[t._v("计算机语言的种类非常的多，总的来说可以分成机器语言，汇编语言和高级语言三大类。")]),t._v(" "),a("li",[t._v("实际上计算机最终所执行的都是 机器语言，它是由“0”和“1”组成的二进制数，二进制是计算机语言的基础。")])]),t._v(" "),a("h3",{attrs:{id:"编程语言-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编程语言-2"}},[t._v("#")]),t._v(" 编程语言")]),t._v(" "),a("p",[t._v("可以通过类似于人类语言的“语言”来控制计算机，让计算机为我们做事情，这样的语言就叫做编程语言（Programming Language）。")]),t._v(" "),a("p",[t._v("编程语言是用来控制计算机的一系列指令，它有固定的格式和词汇（不同编程语言的格式和词汇不一样），必须遵守。如今通用的编程语言有两种形式：汇编语言和高级语言。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("语言类型")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("strong",[t._v("汇编语言")])]),t._v(" "),a("td",[t._v("汇编语言和机器语言实质是相同的，都是直接对硬件操作，只不过指令采用了英文缩写的标识符，容易识别和记忆。")])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("高级语言")])]),t._v(" "),a("td",[t._v("高级语言主要是相对于低级语言而言，它并不是特指某一种具体的语言，而是包括了很多编程语言，常用的有C语言、C++、Java、C#、Python、PHP、JavaScript、Go语言、Objective-C、Swift等。")])])])]),t._v(" "),a("h3",{attrs:{id:"编译器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编译器"}},[t._v("#")]),t._v(" 编译器")]),t._v(" "),a("p",[t._v("高级语言所编制的程序不能直接被计算机识别，必须经过转换才能被执行，为此，我们需要一个翻译器。翻译器可以将我们所编写的源代码转换为机器语言，这也被称为二进制化。")]),t._v(" "),a("h3",{attrs:{id:"标记语言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标记语言"}},[t._v("#")]),t._v(" 标记语言")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("语言")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("编程语言")]),t._v(" "),a("td",[t._v("编程语言有很强的逻辑和行为能力。在编程语言里, 你会看到很多 if else 、for 、while等具有逻辑性和行为能力的指令，这是主动的。")])]),t._v(" "),a("tr",[a("td",[t._v("标记语言")]),t._v(" "),a("td",[t._v("标记语言（html）不用于向计算机发出指令，常用于格式化和链接。标记语言的存在是用来被读取的, 他是被动的。")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("MarkDown 是比较常见和大量使用的标记语言，除此之外还有 BBcode 等等，这些语言多用于文档，记录，论坛，文章等场景")])]),t._v(" "),a("h2",{attrs:{id:"计算机基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计算机基础"}},[t._v("#")]),t._v(" 计算机基础")]),t._v(" "),a("h3",{attrs:{id:"计算机组成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计算机组成"}},[t._v("#")]),t._v(" 计算机组成")]),t._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://gitee.com/QiJieH/blog-image-bed/raw/master//20200816122228.png",loading:"lazy"}})]),t._v(" "),a("h3",{attrs:{id:"数据存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据存储"}},[t._v("#")]),t._v(" 数据存储")]),t._v(" "),a("ol",[a("li",[t._v("计算机内部使用二进制 0 和 1来表示数据。")]),t._v(" "),a("li",[t._v("所有数据，包括文件、图片等最终都是以二进制数据（0 和 1）的形式存放在硬盘中的。")]),t._v(" "),a("li",[t._v("所有程序，包括操作系统，本质都是各种数据，也以二进制数据的形式存放在硬盘中。平时我们所说的安装软件，其实就是把程序文件复制到硬盘中。")]),t._v(" "),a("li",[t._v("硬盘、内存都是保存的二进制数据。")])]),t._v(" "),a("p",[a("strong",[t._v("数据存储单位")])]),t._v(" "),a("ul",[a("li",[t._v("位(bit)：   1bit 可以保存一个 0 或者 1 （最小的存储单位）")]),t._v(" "),a("li",[t._v("字节(Byte)：1B = 8b")]),t._v(" "),a("li",[t._v("千字节(KB)：1KB = 1024B")]),t._v(" "),a("li",[t._v("兆字节(MB)：1MB = 1024KB")]),t._v(" "),a("li",[t._v("吉字节(GB):  1GB = 1024MB")]),t._v(" "),a("li",[t._v("太字节(TB):  1TB = 1024GB")])]),t._v(" "),a("h3",{attrs:{id:"程序运行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#程序运行"}},[t._v("#")]),t._v(" 程序运行")]),t._v(" "),a("p",[t._v("计算机运行软件的过程：")]),t._v(" "),a("ol",[a("li",[t._v("打开某个程序时，先从硬盘中把程序的代码加载到内存中")]),t._v(" "),a("li",[t._v("CPU执行内存中的代码")])]),t._v(" "),a("blockquote",[a("p",[t._v("注意：之所以要内存的一个重要原因，是因为 cpu运行太快了，如果只从硬盘中读数据，会浪费cpu性能，所以，才使用存取速度更快的内存来保存运行时的数据。（内存是电，硬盘是机械）")])]),t._v(" "),a("h2",{attrs:{id:"初识-javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初识-javascript"}},[t._v("#")]),t._v(" 初识 JavaScript")]),t._v(" "),a("h3",{attrs:{id:"js-历史"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-历史"}},[t._v("#")]),t._v(" Js 历史")]),t._v(" "),a("ul",[a("li",[t._v("创始人布兰登*艾奇 （Brendan Eich，1961年~）用十天完成了 Javascript 的设计，最初命名为 LiveScript，后来与 Sun 合作重命名为 JavaScript。")]),t._v(" "),a("li",[t._v("JavaScript 是世界上最流行的语言之一，是一种运行在客户端的脚本语言 （Script 是脚本的意思）")]),t._v(" "),a("li",[t._v("脚本语言：不需要编译，运行过程中由 js 解释器( js 引擎）逐行来进行解释并执行")]),t._v(" "),a("li",[t._v("现在也可以基于 Node.js 技术进行服务器端编程")])]),t._v(" "),a("h3",{attrs:{id:"js-作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-作用"}},[t._v("#")]),t._v(" Js 作用")]),t._v(" "),a("ul",[a("li",[t._v("表单动态校验（密码强度检测）  （ JS 产生最初的目的 ）")]),t._v(" "),a("li",[t._v("网页特效")]),t._v(" "),a("li",[t._v("服务端开发(Node.js)")]),t._v(" "),a("li",[t._v("桌面程序(Electron)")]),t._v(" "),a("li",[t._v("App(Cordova)")]),t._v(" "),a("li",[t._v("控制硬件-物联网(Ruff)")]),t._v(" "),a("li",[t._v("游戏开发(cocos2d-js)")])]),t._v(" "),a("h3",{attrs:{id:"html-css-js-关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#html-css-js-关系"}},[t._v("#")]),t._v(" html css js 关系")]),t._v(" "),a("ul",[a("li",[t._v("HTML 确定DOM树(内容数据)")]),t._v(" "),a("li",[t._v("CSS 渲染HTML样式")]),t._v(" "),a("li",[t._v("JS 实现交互，业务逻辑")])]),t._v(" "),a("h3",{attrs:{id:"浏览器执行-js-简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器执行-js-简介"}},[t._v("#")]),t._v(" 浏览器执行 Js 简介")]),t._v(" "),a("p",[t._v("浏览器分为两部分 渲染引擎（内核）和 Js引擎")]),t._v(" "),a("ul",[a("li",[t._v("渲染引擎：解析 HTML 和 渲染CSS，如 Chrome 浏览器的 Blink")]),t._v(" "),a("li",[t._v("Js引擎：Js解释器,用来读取和处理js代码，如 Chrome v8")])]),t._v(" "),a("p",[t._v("浏览器本身并不会执行JS代码，而是通过内置 JavaScript 引擎(解释器) 来执行 JS 代码 。JS 引擎执行代码时逐行解释每一句源码（转换为机器语言），然后由计算机去执行，所以 JavaScript 语言归为脚本语言，会逐行解释执行。")]),t._v(" "),a("h3",{attrs:{id:"js-组成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-组成"}},[t._v("#")]),t._v(" Js 组成")]),t._v(" "),a("ul",[a("li",[t._v("JavaScript\n"),a("ul",[a("li",[t._v("ECMAScript")]),t._v(" "),a("li",[t._v("DOM")]),t._v(" "),a("li",[t._v("BOM")])])])]),t._v(" "),a("p",[a("strong",[t._v("ECMAScript")])]),t._v(" "),a("p",[t._v("ECMAScript 是由ECMA 国际（ 原欧洲计算机制造商协会）进行标准化的一门编程语言，这种语言在万维网上应用广泛，它往往被称为 JavaScript或 JScript，但实际上后两者是 ECMAScript 语言的实现和扩展。")]),t._v(" "),a("p",[t._v("ECMAScript：规定了JS的编程语法和基础核心知识，是所有浏览器厂商共同遵守的一套JS语法工业标准。")]),t._v(" "),a("p",[t._v("更多参看MDN: "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/JavaScript_technologies_overview",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN手册"),a("OutboundLink")],1)]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("DOM 文档对象模型")])]),t._v(" "),a("p",[a("strong",[t._v("文档对象模型")]),t._v("（DocumentObject Model，简称DOM），是W3C组织推荐的处理可扩展标记语言的标准编程接口。通过 DOM 提供的接口可以对页面上的各种元素进行操作（大小、位置、颜色等）")]),t._v(" "),a("p",[a("strong",[t._v("BOM 浏览器对象模型")])]),t._v(" "),a("p",[a("strong",[t._v("浏览器对象模型")]),t._v("(Browser Object Model，简称BOM) 是指浏览器对象模型，它提供了独立于内容的、可以与浏览器窗口进行互动的对象结构。通过BOM可以操作浏览器窗口，比如弹出框、控制浏览器跳转、获取分辨率等。")])]),t._v(" "),a("h3",{attrs:{id:"js-初始"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-初始"}},[t._v("#")]),t._v(" Js 初始")]),t._v(" "),a("p",[t._v("JS 有3种书写位置，分别为行内、内嵌和外部。")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("行内式")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("button"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("点我试试"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("onclick")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("alert("),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("Hello World"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v(")"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),a("ul",[a("li",[t._v("可以将单行或少量 JS 代码写在HTML标签的事件属性中（以 on 开头的属性），如：onclick")]),t._v(" "),a("li",[t._v("注意单双引号的使用：在HTML中我们推荐使用双引号, JS 中我们推荐使用单引号")]),t._v(" "),a("li",[t._v("可读性差， 在html中编写JS大量代码时，不方便阅读；")]),t._v(" "),a("li",[t._v("引号易错，引号多层嵌套匹配时，非常容易弄混；")]),t._v(" "),a("li",[t._v("特殊情况下使用")])])]),t._v(" "),a("li",[a("p",[t._v("内嵌式")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello  World~!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("ul",[a("li",[t._v("可以将多行JS代码写到 script 标签中")]),t._v(" "),a("li",[t._v("内嵌 JS 是学习时常用的方式")])])]),t._v(" "),a("li",[a("p",[t._v("外部JS文件")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("my.js"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}}),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("ul",[a("li",[t._v("利于HTML页面代码结构化，把大段 JS代码独立到 HTML 页面之外，既美观，也方便文件级别的复用")]),t._v(" "),a("li",[t._v("引用外部 JS文件的 script 标签中间不可以写代码")]),t._v(" "),a("li",[t._v("适合于JS 代码量比较大的情况")])])])]),t._v(" "),a("h2",{attrs:{id:"javascript-注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-注释"}},[t._v("#")]),t._v(" JavaScript 注释")]),t._v(" "),a("p",[t._v("和其他编程语言一样 Js 也提供了代码注释语法")]),t._v(" "),a("h3",{attrs:{id:"单行注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单行注释"}},[t._v("#")]),t._v(" 单行注释")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// descript")]),t._v("\n")])])]),a("h3",{attrs:{id:"多行注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多行注释"}},[t._v("#")]),t._v(" 多行注释")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n  desone\n  destwo\n*/")]),t._v("\n")])])]),a("h2",{attrs:{id:"javascript-交互"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-交互"}},[t._v("#")]),t._v(" JavaScript 交互")]),t._v(" "),a("p",[t._v("为了方便信息的输入输出，JS中提供了一些输入输出语句，其常用的语句如下：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("方法")]),t._v(" "),a("th",[t._v("说明")]),t._v(" "),a("th",[t._v("归属")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("alert(msg)")])]),t._v(" "),a("td",[t._v("浏览器弹出警示框")]),t._v(" "),a("td",[t._v("浏览器")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("console.log(msg)")])]),t._v(" "),a("td",[t._v("浏览器控制台打印输出信息")]),t._v(" "),a("td",[t._v("浏览器")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("prompt(info)")])]),t._v(" "),a("td",[t._v("浏览器弹出输入框，用户可以输入")]),t._v(" "),a("td",[t._v("浏览器")])])])]),t._v(" "),a("ul",[a("li",[t._v("注意："),a("code",[t._v("alert()")]),t._v(" 主要用来显示消息给用户，"),a("code",[t._v("console.log()")]),t._v(" 用来给程序员自己看运行时的消息。")])]),t._v(" "),a("h2",{attrs:{id:"javascript-变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-变量"}},[t._v("#")]),t._v(" JavaScript 变量")]),t._v(" "),a("h3",{attrs:{id:"变量定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量定义"}},[t._v("#")]),t._v(" 变量定义")]),t._v(" "),a("p",[t._v("变量是用于存放数据的容器。 我们通过 变量名 获取数据，甚至数据可以修改。")]),t._v(" "),a("h3",{attrs:{id:"变量存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量存储"}},[t._v("#")]),t._v(" 变量存储")]),t._v(" "),a("p",[t._v("变量是程序在内存中申请的一块用来存放数据的空间。类似我们酒店的房间，一个房间就可以看做是一个变量。")]),t._v(" "),a("h3",{attrs:{id:"变量使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量使用"}},[t._v("#")]),t._v(" 变量使用")]),t._v(" "),a("p",[a("strong",[t._v("变量声明")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  声明变量  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  声明一个 名称为age 的变量   ")]),t._v("\n")])])]),a("ul",[a("li",[a("p",[t._v("var 是一个 JS关键字，用来声明变量( variable 变量的意思 )。使用该关键字声明变量后，计算机会自动为变量分配内存空间，不需要程序员管")])]),t._v(" "),a("li",[a("p",[t._v("age 是程序员定义的变量名，我们要通过变量名来访问内存中分配的空间")])])]),t._v(" "),a("p",[a("strong",[t._v("变量赋值")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 给 age  这个变量赋值为 10")]),t._v("\n")])])]),a("ul",[a("li",[t._v("= 用来把右边的值赋给左边的变量空间中   此处代表赋值的意思")]),t._v(" "),a("li",[t._v("变量值是程序员保存到变量空间里的值")])]),t._v(" "),a("p",[a("strong",[t._v("变量初始化")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" age  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明变量同时赋值为 18")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明一个变量并赋值， 我们称之为变量的初始化。")]),t._v("\n")])])]),a("p",[a("strong",[t._v("扩展")])]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("更新变量")])]),t._v(" "),a("p",[t._v("一个变量被重新复赋值后，它原有的值就会被覆盖，变量值将以最后一次赋的值为准。")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nage "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("81")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最后的结果就是81因为18 被覆盖掉了   ")]),t._v("\n")])])]),a("ul",[a("li",[a("p",[a("strong",[t._v("同时声明多个变量")])]),t._v(" "),a("p",[t._v("同时声明多个变量时，只需要写一个 var， 多个变量名之间使用英文逗号隔开。")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zs'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[a("strong",[t._v("特殊情况")])])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("情况")]),t._v(" "),a("th",[t._v("说明")]),t._v(" "),a("th",[t._v("结果")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("var age ; console.log (age);")])]),t._v(" "),a("td",[t._v("只声明 不赋值")]),t._v(" "),a("td",[t._v("undefined")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("console.log(age)")])]),t._v(" "),a("td",[t._v("不声明 不赋值  直接使用")]),t._v(" "),a("td",[t._v("报错")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("age = 10; console.log (age);")])]),t._v(" "),a("td",[t._v("不声明   只赋值")]),t._v(" "),a("td",[t._v("10")])])])]),t._v(" "),a("h3",{attrs:{id:"变量命名规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量命名规范"}},[t._v("#")]),t._v(" 变量命名规范")]),t._v(" "),a("ul",[a("li",[t._v("由字母(A-Za-z)、数字(0-9)、下划线(_)、美元符号( $ )组成，如：usrAge, num01, _name")]),t._v(" "),a("li",[t._v("严格区分大小写。var app; 和 var App; 是两个变量")]),t._v(" "),a("li",[t._v("不能 以数字开头。  18age   是错误的")]),t._v(" "),a("li",[t._v("不能 是关键字、保留字。例如：var、for、while")]),t._v(" "),a("li",[t._v("变量名必须有意义。 MMD   BBD        nl   →     age")]),t._v(" "),a("li",[t._v("遵守驼峰命名法。首字母小写，后面单词的首字母需要大写。myFirstName")])]),t._v(" "),a("h2",{attrs:{id:"javascript-数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-数据类型"}},[t._v("#")]),t._v(" JavaScript 数据类型")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("为什么需要数据类型")]),t._v(" "),a("p",[t._v("​\t\t在计算机中，不同的数据所需占用的存储空间是不同的，为了便于把数据分成所需内存大小不同的数据，充分利用存储空间，于是定义了不同的数据类型。\n简单来说，数据类型就是数据的类别型号。比如姓名“张三”，年龄18，这些数据的类型是不一样的。")])]),t._v(" "),a("li",[a("p",[t._v("变量的数据类型")]),t._v(" "),a("p",[t._v("​\t\t变量是用来存储值的所在处，它们有名字和数据类型。变量的数据类型决定了如何将代表这些值的位存储到计算机的内存中。JavaScript 是一种弱类型或者说动态语言。这意味着不用提前声明变量的类型，在程序运行过程中，类型会被自动确定：")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这是一个数字型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" areYouOk "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'是的'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这是一个字符串     ")]),t._v("\n")])])]),a("p",[t._v("在代码运行时，变量的数据类型是由 JS引擎 根据 = 右边变量值的数据类型来判断的，运行完毕之后， 变量就确定了数据类型。JavaScript 拥有动态类型，同时也意味着相同的变量可用作不同的类型：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// x 为数字")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Bill"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// x 为字符串   ")]),t._v("\n")])])]),a("p",[a("strong",[t._v("JavaScript 数据类型")])]),t._v(" "),a("ul",[a("li",[t._v("简单数据类型\n"),a("ul",[a("li",[a("code",[t._v("Number")]),t._v(" 数值")]),t._v(" "),a("li",[a("code",[t._v("String")]),t._v(" 字符")]),t._v(" "),a("li",[a("code",[t._v("Boolean")]),t._v(" 布尔")]),t._v(" "),a("li",[a("code",[t._v("Undefined")]),t._v(" 未定义")]),t._v(" "),a("li",[a("code",[t._v("Null")]),t._v(" 空")])])]),t._v(" "),a("li",[t._v("复杂数据类型\n"),a("ul",[a("li",[a("code",[t._v("object")]),t._v(" 对象")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("Js 是一种弱类型或动态类型语言，因为其运行机制变量类型可以在程序运行时自动判断，不同于 C 和 Java 的语法严谨。")])]),t._v(" "),a("h3",{attrs:{id:"简单数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单数据类型"}},[t._v("#")]),t._v(" 简单数据类型")]),t._v(" "),a("hr"),t._v(" "),a("ul",[a("li",[a("strong",[a("code",[t._v("Number")])]),t._v(" "),a("ul",[a("li",[t._v("数字型")]),t._v(" "),a("li",[t._v("包含整型值浮点值，如 21，0.21")]),t._v(" "),a("li",[t._v("默认值：0")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("不同于其他语言对数字类型的细分如 C语言 "),a("code",[t._v("int")]),t._v(","),a("code",[t._v("float")]),t._v(","),a("code",[t._v("double")]),t._v(" 等，JS 对数字细分类型并不敏感。")])]),t._v(" "),a("p",[a("strong",[t._v("数字型进制")])]),t._v(" "),a("p",[t._v("最常见的进制有二进制、八进制、十进制、十六进制。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1.八进制数字序列范围：0~7")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("07")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对应十进制的7")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("019")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对应十进制的19")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("08")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对应十进制的8")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2.十六进制数字序列范围：0~9以及A~F")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xA")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   \n")])])]),a("p",[t._v("现阶段我们只需要记住，在JS中八进制前面加0，十六进制前面加 0x")]),t._v(" "),a("p",[a("strong",[t._v("数字型范围")])]),t._v(" "),a("p",[t._v("JavaScript中数值的最大和最小值")]),t._v(" "),a("ul",[a("li",[t._v("最大值："),a("code",[t._v("Number.MAX_VALUE")]),t._v("，这个值为： "),a("code",[t._v("1.7976931348623157e+308")])]),t._v(" "),a("li",[t._v("最小值："),a("code",[t._v("Number.MIN_VALUE")]),t._v("，这个值为："),a("code",[t._v("5e-32")])])]),t._v(" "),a("p",[a("strong",[t._v("特殊值")])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("Infinity")]),t._v(" ，代表无穷大，大于任何数值")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("-Infinity")]),t._v(" ，代表无穷小，小于任何数值")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("NaN")]),t._v(" ，"),a("code",[t._v("Not a number")]),t._v(" ，代表一个非数值")])])]),t._v(" "),a("blockquote",[a("p",[a("strong",[a("code",[t._v("isNaN()")])])]),t._v(" "),a("p",[t._v("用来判断一个变量是否为非数字的类型，返回 true 或者 false")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'string'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// return true")]),t._v("\n")])])])]),t._v(" "),a("hr"),t._v(" "),a("ul",[a("li",[a("strong",[a("code",[t._v("Boolean")])]),t._v(" "),a("ul",[a("li",[t._v("布尔型")]),t._v(" "),a("li",[t._v("真假，"),a("code",[t._v("true")]),t._v(" "),a("code",[t._v("false")]),t._v("，1，0")]),t._v(" "),a("li",[t._v("默认值："),a("code",[t._v("false")])])])])]),t._v(" "),a("p",[t._v("布尔型和数字型相加的时候， true 的值为 1 ，false 的值为 0。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n")])])]),a("hr"),t._v(" "),a("ul",[a("li",[a("strong",[a("code",[t._v("String")])]),t._v(" "),a("ul",[a("li",[t._v("字符串型")]),t._v(" "),a("li",[t._v('如 ``"This is string"`')]),t._v(" "),a("li",[t._v("默认值： "),a("code",[t._v('""')])])])])]),t._v(" "),a("p",[t._v("字符串型可以是引号中的任意文本，其语法为 \"双引号\" 和 '单引号'")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" strMsg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我爱北京天安门~"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用双引号表示字符串")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" strMsg2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我爱吃猪蹄~'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用单引号表示字符串")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 常见错误")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" strMsg3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 我爱大肘子"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 报错，没使用引号，会被认为是js代码，但js没有这些语法")]),t._v("\n")])])]),a("p",[t._v("因为 HTML 标签里面的属性使用的是双引号，JS 这里我们更推荐使用单引号。")]),t._v(" "),a("p",[a("em",[t._v("引号嵌套")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" strMsg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我是\"高帅富\"程序猿'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以用''包含\"\"")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" strMsg2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"我是'高帅富'程序猿\"")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 也可以用\"\" 包含''")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  常见错误")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" badQuotes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 'What on earth"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v('"'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 报错，不能 单双引号搭配")]),t._v("\n")])])]),a("p",[a("em",[t._v("字符串转义")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("转义符")]),t._v(" "),a("th",[t._v("解释说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("\\n")]),t._v(" "),a("td",[t._v("换行符，n   是   newline   的意思")])]),t._v(" "),a("tr",[a("td",[t._v("\\ \\")]),t._v(" "),a("td",[t._v("斜杠   \\")])]),t._v(" "),a("tr",[a("td",[t._v("'")]),t._v(" "),a("td",[t._v("'   单引号")])]),t._v(" "),a("tr",[a("td",[t._v('"')]),t._v(" "),a("td",[t._v("”双引号")])]),t._v(" "),a("tr",[a("td",[t._v("\\t")]),t._v(" "),a("td",[t._v("tab  缩进")])]),t._v(" "),a("tr",[a("td",[t._v("\\b")]),t._v(" "),a("td",[t._v("空格 ，b   是   blank  的意思")])])])]),t._v(" "),a("p",[a("em",[t._v("字符串长度")])]),t._v(" "),a("p",[t._v("​\t\t字符串是由若干字符组成的，这些字符的数量就是字符串的长度。通过字符串的 length 属性可以获取整个字符串的长度。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" strMsg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this is string"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("strMsg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 显示 14")]),t._v("\n")])])]),a("p",[a("em",[t._v("字符串拼接")])]),t._v(" "),a("ul",[a("li",[t._v("多个字符串之间可以使用 + 进行拼接，其拼接方式为 字符串 + 任何类型 = 拼接之后的新字符串")]),t._v(" "),a("li",[t._v("拼接前会把与字符串相加的"),a("strong",[t._v("任何类型转成字符串")]),t._v("，再拼接成一个新的字符串")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//1.1 字符串 "相加"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'world'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// hello world")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//1.2 数值字符串 "相加"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'100'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'100'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 100100")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1.3 数值字符串 + 数值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'11'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1112 ")]),t._v("\n")])])]),a("p",[a("em",[t._v("字符串拼接加强")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'string'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只要有字符就会相连 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'string num'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      \t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// string num")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'string'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("         \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// string18")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'str1'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'str2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// str122str2")]),t._v("\n")])])]),a("ul",[a("li",[t._v("经常会将字符串和变量来拼接，变量可以很方便地修改里面的值")]),t._v(" "),a("li",[t._v("变量是不能添加引号的，因为加引号的变量会变成字符串")])]),t._v(" "),a("hr"),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[a("code",[t._v("Undefined")])])]),t._v(" "),a("ul",[a("li",[t._v("未定义型")]),t._v(" "),a("li",[a("code",[t._v("var a; console.log(a)")])]),t._v(" "),a("li",[t._v("默认值："),a("code",[t._v("undefined")])])])]),t._v(" "),a("li",[a("p",[a("strong",[a("code",[t._v("Null")])])]),t._v(" "),a("ul",[a("li",[t._v("空值")]),t._v(" "),a("li",[a("code",[t._v("var a=null; console.log(a)")])]),t._v(" "),a("li",[t._v("默认值："),a("code",[t._v("null")])])])])]),t._v(" "),a("p",[t._v("一个声明后没有被赋值的变量会有一个默认值undefined ( 如果进行相连或者相加时，注意结果）")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" variable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("variable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'你好'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" variable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 你好undefined")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" variable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" variable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  NaN")]),t._v("\n")])])]),a("p",[t._v("一个声明变量给 null 值，里面存的值为空")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" vari "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'你好'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" vari"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 你好null")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" vari"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 11")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" vari"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  1")]),t._v("\n")])])]),a("h3",{attrs:{id:"获取数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取数据类型"}},[t._v("#")]),t._v(" 获取数据类型")]),t._v(" "),a("p",[a("code",[t._v("typeof")]),t._v(" 可用来获取检测变量的数据类型")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 结果 number")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("通过 "),a("code",[t._v("console.log()")]),t._v(" 打印出来的数据颜色也可以判断数据类型")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("cosole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 紫色")]),t._v("\ncosole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'string'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 黑色")]),t._v("\ncosole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 蓝色")]),t._v("\ncosole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 灰色")]),t._v("\ncosole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 灰色")]),t._v("\n")])])])]),t._v(" "),a("p",[a("em",[t._v("字面量")])]),t._v(" "),a("p",[t._v("字面量是在源代码中一个固定值的表示法，通俗来说，就是字面量表示如何表达这个值。")]),t._v(" "),a("h3",{attrs:{id:"数据类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型转换"}},[t._v("#")]),t._v(" 数据类型转换")]),t._v(" "),a("p",[a("strong",[t._v("转化为字符型")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("方法")]),t._v(" "),a("th",[t._v("说明")]),t._v(" "),a("th",[t._v("use")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("toString()")])]),t._v(" "),a("td",[t._v("转成字符串")]),t._v(" "),a("td",[a("code",[t._v("var num = 233; var str = num.toString()")]),t._v(";")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("String()")])]),t._v(" "),a("td",[t._v("强制类型转换字符串")]),t._v(" "),a("td",[a("code",[t._v("var num = 233; var str = String(num);")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("+")])]),t._v(" "),a("td",[t._v("字符串拼接")]),t._v(" "),a("td",[a("code",[t._v("var num = 233; var str = num +'';")])])])])]),t._v(" "),a("p",[t._v("使用 + 号转换为字符串是利用了 Js 的语法特性，也称为隐式转换。")]),t._v(" "),a("p",[a("strong",[t._v("转换为数字型")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("方法")]),t._v(" "),a("th",[t._v("说明")]),t._v(" "),a("th",[t._v("use")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("parseInt()")])]),t._v(" "),a("td",[t._v("转换为整数值型")]),t._v(" "),a("td",[a("code",[t._v("parseInt('233px');")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("parseFloat()")])]),t._v(" "),a("td",[t._v("转化为浮点数值型")]),t._v(" "),a("td",[a("code",[t._v("parseFloat('23.33');")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("- * /")])]),t._v(" "),a("td",[t._v("隐式转换")]),t._v(" "),a("td",[a("code",[t._v("'23' - 0")])])])])]),t._v(" "),a("ul",[a("li",[t._v("注意 "),a("code",[t._v("parseInt")]),t._v(" 和 "),a("code",[t._v("parseFloat")]),t._v(" 单词的大小写，这2个是重点")]),t._v(" "),a("li",[t._v("隐式转换是我们在进行算数运算的时候，JS 自动转换了数据类型")])]),t._v(" "),a("p",[a("strong",[t._v("转换为布尔型")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("方法")]),t._v(" "),a("th",[t._v("说明")]),t._v(" "),a("th",[t._v("use")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Boolean()")]),t._v(" "),a("td",[t._v("转换为布尔型")]),t._v(" "),a("td",[a("code",[t._v("Boolean('true')")])])])])]),t._v(" "),a("ul",[a("li",[t._v("代表空、否定的值会被转换为 "),a("code",[t._v("false")]),t._v("  ，如 "),a("code",[t._v("''、0、NaN、null、undefined")])]),t._v(" "),a("li",[t._v("其余值都会被转换为 "),a("code",[t._v("true")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'string'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),a("h2",{attrs:{id:"解释型-和-编译型语言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解释型-和-编译型语言"}},[t._v("#")]),t._v(" 解释型 和 编译型语言")]),t._v(" "),a("h3",{attrs:{id:"概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),a("p",[t._v("计算机不能直接理解任何除机器语言以外的语言，所以必须要把程序员所写的程序语言翻译成机器语言才能执行程序。程序语言翻译成机器语言的工具，被称为翻译器。")]),t._v(" "),a("ul",[a("li",[t._v("翻译器翻译的方式有两种：一个是编译，另外一个是解释。两种方式之间的区别在于翻译的时间点不同")]),t._v(" "),a("li",[t._v("编译器是在代码执行之前进行编译，生成中间代码文件")]),t._v(" "),a("li",[t._v("解释器是在运行时进行及时解释，并立即执行(当编译器以解释方式运行的时候，也称之为解释器)")])]),t._v(" "),a("h3",{attrs:{id:"执行过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行过程"}},[t._v("#")]),t._v(" 执行过程")]),t._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://gitee.com/QiJieH/blog-image-bed/raw/master//20200816141114.png",loading:"lazy"}})]),t._v(" "),a("h2",{attrs:{id:"关键字和保留字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关键字和保留字"}},[t._v("#")]),t._v(" 关键字和保留字")]),t._v(" "),a("h3",{attrs:{id:"标识符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标识符"}},[t._v("#")]),t._v(" 标识符")]),t._v(" "),a("p",[t._v("标识符：就是指开发人员为变量、属性、函数、参数取的名字。")]),t._v(" "),a("p",[t._v("标识符不能是关键字或保留字。")]),t._v(" "),a("h3",{attrs:{id:"关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关键字"}},[t._v("#")]),t._v(" 关键字")]),t._v(" "),a("p",[t._v("关键字：是指 JS本身已经使用了的字，不能再用它们充当变量名、方法名。")]),t._v(" "),a("p",[t._v("包括："),a("code",[t._v("break、case、catch、continue、default、delete、do、else、finally、for、function、if、in、instanceof、new、return、switch、this、throw、try、typeof、var、void、while、with")]),t._v(" 等。")]),t._v(" "),a("h3",{attrs:{id:"保留字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#保留字"}},[t._v("#")]),t._v(" 保留字")]),t._v(" "),a("p",[t._v("保留字：实际上就是预留的“关键字”，意思是现在虽然还不是关键字，但是未来可能会成为关键字，同样不能使用它们当变量名或方法名。")]),t._v(" "),a("p",[a("code",[t._v("包括：boolean、byte、char、class、const、debugger、double、enum、export、extends、fimal、float、goto、implements、import、int、interface、long、mative、package、private、protected、public、short、static、super、synchronized、throws、transient、volatile 等。")])]),t._v(" "),a("p",[t._v("注意：如果将保留字用作变量名或函数名，那么除非将来的浏览器实现了该保留字，否则很可能收不到任何错误消息。当浏览器将其实现后，该单词将被看做关键字，如此将出现关键字错误。")])])}),[],!1,null,null,null);s.default=e.exports}}]);